name: Build and Deploy to Server

on:
    push:
        branches:
            - master
        paths-ignore:
            - 'README.md'

jobs:
    check:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Cache Node.js modules
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.npm
                      .next/cache
                  key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20'

            - name: Install dependencies
              run: npm install

            - name: Run build
              run: npm run build
    lint:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Cache Node.js modules
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.npm
                      .next/cache
                  key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20'

            - name: Install dependencies
              run: npm i

            - name: Eslint check
              run: npm run lint

    deploy:
        runs-on: ubuntu-latest
        needs: [check, lint]

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Install SSH and SCP
              run: sudo apt-get update && sudo apt-get install -y openssh-client sshpass

            - name: Deploy
              env:
                  SSHPASS: ${{ secrets.ROOT_SSH_PASSWORD }}
              run: |
                  sshpass -e ssh -o StrictHostKeyChecking=no root@${{ secrets.SERVER_IP }} << 'EOF'
                    set -e
                    cd /home/andcoolsystems/pplbandage_site
                    git fetch
                    git stash
                    git merge '@{u}'
                    chmod +x production_build/update_hash.sh
                    ./production_build/update_hash.sh NEXT_PUBLIC_COMMIT_SHA ${{ github.sha }}
                    docker-compose build
                    docker-compose down --volumes --remove-orphans
                    docker-compose up -d
                  EOF
