html {
	min-height: 100%;
	display: flex;
	flex-direction: row;
	align-items: stretch;
	justify-content: center;
}

body {
	background:
		linear-gradient(rgba(255, 255, 255, 0.02) 0%, rgba(255, 255, 255, 0.04) 100%) center center / cover,
		linear-gradient(to right, transparent 29px, rgba(255, 255, 255, 0.03) 30px, transparent 31px) 0% 0% / 30px 30px,
		linear-gradient(transparent 29px, rgba(255, 255, 255, 0.03) 30px, transparent 31px) 0% 0% / 30px 30px;

	background-color: var(--main-bg-color);
	margin: 0;
	scrollbar-gutter: stable;
	overflow-y: scroll;
	color: var(--main-text-color);
	padding-bottom: 1rem;
	color-scheme: dark;

	min-height: 100%;
	display: flex;
	flex-direction: column;
	justify-content: space-between;
	box-sizing: border-box;
	min-width: 100%;
}

body::-webkit-scrollbar {
	width: 10px;
}

body::-webkit-scrollbar-thumb {
	border-radius: 10px;
	background-color: rgb(60, 60, 60);
}

.react-select-container .react-select__control {
	cursor: pointer;
	color: #ffffff;
	border-radius: 8px;
	background-color: var(--main-card-color);
	border: 1px solid var(--main-element-color);
	transition-property: border-color, box-shadow, background-color, color;
	transition-duration: 150ms;
	transition-timing-function: ease-in-out;
}

.react-select-container .react-select__control:hover {
	border-color: #5b6375;
	transition-property: border-color, box-shadow, background-color, color;
	transition-duration: 150ms;
	transition-timing-function: ease-in-out;
}

.react-select-container .react-select__control--is-focused {
	border-color: #5b6375;
	box-shadow: none;
	transition-property: border-color, box-shadow, background-color, color;
	transition-duration: 150ms;
	transition-timing-function: ease-in-out;
}

.react-select-container .react-select__menu {
	background-color: var(--main-element-color);
	transition-property: border-color, box-shadow, background-color, color;
	transition-duration: 150ms;
	transition-timing-function: ease-in-out;
	z-index: 9;
}

.react-select-container .react-select__option {
	color: #ffffff;
	background-color: var(--main-element-color);
	transition-property: border-color, box-shadow, background-color, color;
	transition-duration: 150ms;
	transition-timing-function: ease-in-out;
}

.react-select-container .react-select__group {
	background-color: var(--main-element-color);
	transition-property: border-color, box-shadow, background-color, color;
	transition-duration: 150ms;
	transition-timing-function: ease-in-out;
}

.react-select-container .react-select__group-heading {
	color: #aaaaaa;
	background-color: var(--main-element-color);
	padding-bottom: 0.25em;
	margin-bottom: 0;
	transition-property: border-color, box-shadow, background-color, color;
	transition-duration: 200ms;
	transition-timing-function: ease-in-out;
}

.react-select-container .react-select__option:hover {
	background-color: var(--main-card-color);
	transition-property: border-color, box-shadow, background-color, color;
	transition-duration: 150ms;
	transition-timing-function: ease-in-out;
}

.react-select-container .react-select__option--is-selected {
	background-color: var(--main-element-color);
	transition-property: border-color, box-shadow, background-color, color;
	transition-duration: 150ms;
	transition-timing-function: ease-in-out;
}

.react-select-container .react-select__indicator-separator {
	background-color: var(--main-element-color);
	transition-property: border-color, box-shadow, background-color, color;
	transition-duration: 150ms;
	transition-timing-function: ease-in-out;
}

.react-select-container .react-select__input-container,
.react-select-container .react-select__placeholder,
.react-select-container .react-select__single-value {
	color: #ffffff;
	transition-property: border-color, box-shadow, background-color, color;
	transition-duration: 150ms;
	transition-timing-function: ease-in-out;
}

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
	appearance: none;
	margin: 0;
}

hr {
	border: 1px var(--main-element-color) solid;
}

a {
	color: #ffffff;
	text-decoration: underline;
}

img {
	user-select: none !important;
}